import telebot
import requests
import os
import urllib
import time
from config import main_token
import random
from telebot import types
import emoji
from bs4 import BeautifulSoup


#photo URL
# url='http://scontent-b.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10919672_584633251672188_179950734_n.jpg'
# f = open('test.jpg','wb')
# f.write(urllib.request.urlopen(url).read())
# f.close()


bot = telebot.TeleBot(main_token)

@bot.message_handler(content_types=['sticker']) #ID sticker
def stickers_get_id(message): 
    print(message)

def main():
    markup = types.ReplyKeyboardMarkup(True)
    item = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item_weather = types.KeyboardButton('üì∞ –ù–æ–≤–æ—Å—Ç–∏')
    item_photo_main = types.KeyboardButton('üì∑ –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ')
    # item_video_main = types.KeyboardButton('üìΩ –í–∏–¥–µ–æ')
    item_clear_buttons = types.KeyboardButton('‚ùå –£–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏')
    item_weather_button = types.KeyboardButton('‚òîÔ∏è –ü–æ–≥–æ–¥–∞')

    
    markup.add(item, item_weather, item_weather_button)
    markup.add(item_photo_main, item_clear_buttons) #item_video_main

    return markup


def for_news():
    markup = types.ReplyKeyboardMarkup(True)
    button_weather1 = types.KeyboardButton('–°–ø–æ—Ä—Ç ‚ÜïÔ∏è')
    button_weather2 = types.KeyboardButton('üì∫ –ü–æ–ª–∏—Ç–∏–∫–∞')
    button_weather3 = types.KeyboardButton('–ù–∞—É–∫–∞ ‚ÜïÔ∏è')
    button_weather4 = types.KeyboardButton('üö® –ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è')
    button_weather5 = types.KeyboardButton('üèô –û–±—â–µ—Å—Ç–≤–æ')
    button_weather6 = types.KeyboardButton('üíµ –≠–∫–æ–Ω–æ–º–∏–∫–∞')
    button_weather7 = types.KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥')
    button_weather8 = types.KeyboardButton('‚ùóÔ∏è –î—Ä—É–≥–æ–µ')
 
    markup.add(button_weather1, button_weather2, button_weather3)
    markup.add(button_weather4, button_weather5, button_weather6)
    markup.add(button_weather8 ,button_weather7)
    return markup

def for_sport():
    sport_but = types.ReplyKeyboardMarkup(True)
    button_sport1 = types.KeyboardButton('‚öΩÔ∏è –§—É—Ç–±–æ–ª')
    button_sport2 = types.KeyboardButton('üèí –•–æ–∫–∫–µ–π')
    button_sport3 = types.KeyboardButton('ü§º‚Äç‚ôÇÔ∏è –ï–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞')
    button_sport4 = types.KeyboardButton('üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª')
    button_sport5 = types.KeyboardButton('üéæ –¢–µ–Ω–Ω–∏—Å')
    button_sport6 = types.KeyboardButton('‚õ∑ –õ—ã–∂–∏')
    button_sport7 = types.KeyboardButton('‚óÄÔ∏è –û–±—Ä–∞—Ç–Ω–æ –∫ –Ω–æ–≤–æ—Å—Ç—è–º')

    sport_but.add(button_sport1, button_sport2, button_sport3)
    sport_but.add(button_sport4, button_sport5, button_sport6)
    sport_but.add(button_sport7)
    return sport_but

def for_science():
    science_but = types.ReplyKeyboardMarkup(True)
    button_science1 = types.KeyboardButton('üöÄ –ö–æ—Å–º–æ—Å')
    button_science2 = types.KeyboardButton('üíñ –ó–¥–æ—Ä–æ–≤—å–µ')
    button_science3 = types.KeyboardButton('üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏')
    button_science4 = types.KeyboardButton('üß¨ –ì–µ–Ω–µ—Ç–∏–∫–∞')
    button_science5 = types.KeyboardButton('‚ìÇÔ∏è –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞')
    button_science6 = types.KeyboardButton('üë¨ –°–æ—Ü–∏–æ–ª–æ–≥–∏—è')
    button_science7 = types.KeyboardButton('‚óÄÔ∏è –û–±—Ä–∞—Ç–Ω–æ –∫ –Ω–æ–≤–æ—Å—Ç—è–º')

    science_but.add(button_science1, button_science2, button_science3)
    science_but.add(button_science4, button_science5, button_science6)
    science_but.add(button_science7)
    return science_but



def another():
    markup1 = types.InlineKeyboardMarkup(row_width=2)
    item2 = types.InlineKeyboardButton('–ï—â–µ —Ä–∞–∑?', callback_data='again')

    markup1.add(item2)
    return markup1

def delete_buttons():
    key_delete = types.InlineKeyboardMarkup(row_width=2)
    delete_yes = types.InlineKeyboardButton('–î–∞', callback_data='yes_delete')
    delete_no = types.InlineKeyboardButton('–ù–µ—Ç', callback_data='no_delete')

    key_delete.add(delete_yes, delete_no)
    return key_delete


def how_are_you():
    KeyBRD = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ', callback_data='good')
    item2 = types.InlineKeyboardButton('–ù–µ –æ—á–µ–Ω—å', callback_data='bad')

    KeyBRD.add(item1, item2)
    return KeyBRD


@bot.message_handler(commands=['video'], content_types=['text']) #/video (–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å)
def video(message):
    if message.text.lower() == '/video':
        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–Ω—É—é —Ñ–æ—Ä–º—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ!', reply_markup=main())

@bot.message_handler(commands=['photo'], content_types=['text']) #/photo
def photo(message):
    if message.text.lower() == '/photo':
        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.', reply_markup=main())

@bot.message_handler(commands=['bye']) #–∫–æ–º–∞–Ω–¥–∞ /bye
def bye(message):
    bot.send_message(message.chat.id, f'–£–∂–µ —É—Ö–æ–¥–∏—à—å? –î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!', reply_markup=types.ReplyKeyboardRemove())
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAID_GBnVAUCbG2RR8lRszX7zCsbqs8cAAJSAANBtVYMAhDiZGl_D3IeBA')

@bot.message_handler(commands=['start']) #–∫–æ–º–∞–Ω–¥–∞ /start
def start(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAID9mBnUZt4NxMPcksv0J_jA7oSx1LOAAJUAANBtVYMarf4xwiNAfoeBA')
    bot.send_message(message.chat.id, f'–Ø –±–æ—Ç. –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –ø—Ä–æ–ø–∏—à–∏ /help –∏ —Ç—ã —É–∑–Ω–∞–µ—à—å —á—Ç–æ —è —É–º–µ—é!', reply_markup=main())

@bot.message_handler(commands=['help']) #–∫–æ–º–∞–Ω–¥–∞ /help
def help(message):
    bot.send_message(message.chat.id, f'–ü—Ä–æ–ø–∏—à–∏ /weather, /news, –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ :)', reply_markup=main())


@bot.message_handler(commands=['news'], content_types=['text']) #–∫–æ–º–∞–Ω–¥–∞ /news
def handle(message):
    URL = 'https://ria.ru/world/'

    headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
    }

    response = requests.get(URL, headers=headers)
    soup = BeautifulSoup(response.content, 'html.parser')
    texts = soup.findAll('a', 'list-item__title')

    for i in range(0, len(texts[:-15])):
        txt = str(i + 1) + ') ' + texts[i].text
        bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

@bot.message_handler(commands=['weather'], content_types=['text']) #–∫–æ–º–∞–Ω–¥–∞ /weather 
def weather(message):
    bot.send_message(message.chat.id, f'–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', reply_markup=main())
    bot.register_next_step_handler(message, get_weather)

@bot.message_handler(commands=['weather'], content_types=['text'])
def get_weather(message):
        global city_name
        city_name = message.text
        url = 'http://api.openweathermap.org/data/2.5/weather?q={}&appid=a039ce0930b5de27ee7f762203915016'.format(city_name)
        
        try:
            params = {'units': 'metric', 'lang': 'ru'}
            result = requests.get(url, params=params)
            weather = result.json()


            if weather["main"]['temp'] < 10:
                status = "–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ!"
            elif weather["main"]['temp'] < 20:
                status = "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ!"
            elif weather["main"]['temp'] > 38:
                status = "–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
            else:
                status = "–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

            bot.send_message(message.chat.id, "–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather["main"]['temp'])) + 'üå°' + "\n" + 
                    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + "\n" + 
                    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + "\n" + 
                    "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + str(float(weather['wind']['speed'])) + ' üå™' +"\n" + 
                    "–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + ' ‚ö∞Ô∏è' + "\n" + 
                    "–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(int(weather['main']['humidity'])) + "%" + ' üí¶' + "\n" + 
                    "–í–∏–¥–∏–º–æ—Å—Ç—å " + str(weather['visibility']) + ' üëÄ' +"\n\n" + status)
                    # "–û–ø–∏—Å–∞–Ω–∏–µ " + str(weather['weather'][0]["description"]) + "\n\n" + status)
        except:
            bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥ " + city_name + " –Ω–µ –Ω–∞–π–¥–µ–Ω")

name = ''
surname = ''
age = 0

@bot.message_handler(commands=['reg'], content_types=['text']) #–∫–æ–º–∞–Ω–¥–∞ /reg
def get_user(message):
    if message.text == '/reg':
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
        bot.register_next_step_handler(message, get_age)
    else:
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ /reg')

# @bot.message_handler(commands=['reg'], content_types=['text'])
# def get_name(message):
#     global name
#     bot.send_message(message.chat.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?')
#     bot.register_next_step_handler(message, get_surname)

# @bot.message_handler(commands=['reg'], content_types=['text'])
# def get_surname(message):
#     global surname
#     bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
#     bot.register_next_step_handler(message, get_age)


# @bot.message_handler(commands=['game']) #–≤—Å—Ç–∞–≤–∫–∞ –∏–≥—Ä—ã (t-rex), /game
# def game_short_name(message):
#     bot.send_game(chat_id=message.chat.id, game_short_name='Sologame')


# @bot.callback_query_handler(func=lambda callback_query: callback_query.game_short_name == 'Sologame')
# def game(call):
#     bot.answer_callback_query(callback_query_id=call.id, url='http://www.trex-game.skipser.com/')


def get_age(message):
    global age
    while age == 0:
        try:
            age = int(message.text)
        except Exception:
            bot.send_message(message.chat.id, '–¶–∏—Ñ—Ä–∞–º–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!!!')

        keyboard = types.InlineKeyboardMarkup(row_width=2)
        key_yes = types.InlineKeyboardButton(text='–í–µ—Ä–Ω–æ', callback_data='yes')
        key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
        keyboard.add(key_yes, key_no)
        question = '–°–ø–∞—Å–∏–±–æ, —è –∑–∞–ø–æ–º–Ω—é, —á—Ç–æ —Ç–µ–±–µ ' + str(age) + ' –ª–µ—Ç' + '!'


        bot.send_message(message.chat.id, text=question,  reply_markup=keyboard) #–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å name, surname





@bot.message_handler(content_types=['text']) #–≤—ã–≤–æ–¥ –∏ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è 
def get_text_message(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAID9mBnUZt4NxMPcksv0J_jA7oSx1LOAAJUAANBtVYMarf4xwiNAfoeBA')
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å?', reply_markup=main())
    
    
    # elif message.text.lower() == 'üìΩ –≤–∏–¥–µ–æ':                              –í–ò–î–ï–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢
    #     video = open('test/' + random.choice(os.listdir('video')), 'rb')
    #     bot.send_video(message.chat.id, video, caption='–í–æ—Ç —Ç–≤–æ–µ –≤–∏–¥–µ–æ!')
    
    elif message.text.lower() == 'üì∑ –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ':
        # bot.send_chat_action(message.chat.id, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ')          –ù–ï –†–ê–ë–û–¢–ê–ï–¢
        # img = open('test.jpg', 'rb')
        # bot.send_photo(message.chat.id, img, reply_to_message_id=message.message_id)
        # img.close()
        photo = open('test/' + random.choice(os.listdir('test')), 'rb')
        bot.send_photo(message.chat.id, photo, caption = '–õ–æ–≤–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!')
    
    elif message.text.lower() == 'üé≤ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        bot.send_message(message.chat.id, str(random.randint(0,100)), reply_markup=another())

    elif message.text.lower() == '‚ùå —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏':
        bot.send_message(message.chat.id, '–¢—ã —É–≤–µ—Ä–µ–Ω?', reply_markup=delete_buttons())
    
    elif message.text.lower() == '‚ùóÔ∏è –¥—Ä—É–≥–æ–µ':
        URL = 'https://ria.ru/category_kino/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-19])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

        URL = 'https://ria.ru/tourism_visual/'

        # headers = {
        # 'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        # }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(len(texts[:-14]), 0, -1):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

        URL = 'https://ria.ru/category_religiya/'

        # headers = {
        # 'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        # }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(len(texts[:-18]), 1, -1):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

        URL = 'https://ria.ru/defense_safety/'

        # headers = {
        # 'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        # }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(len(texts[:-17]), 2, -1):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

        
        URL = 'https://ria.ru/world/'

        # headers = {
        # 'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        # }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(len(texts[:-16]), 3, -1):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')
        

    elif message.text.lower() == 'üì∫ –ø–æ–ª–∏—Ç–∏–∫–∞':
        URL = 'https://ria.ru/politics/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üö® –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è':
        URL = 'https://ria.ru/incidents/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üèô –æ–±—â–µ—Å—Ç–≤–æ':
        URL = 'https://ria.ru/society/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üíµ —ç–∫–æ–Ω–æ–º–∏–∫–∞':
        URL = 'https://ria.ru/economy/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == '‚öΩÔ∏è —Ñ—É—Ç–±–æ–ª':
        URL = 'https://ria.ru/football/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üèí —Ö–æ–∫–∫–µ–π':
        URL = 'https://ria.ru/hockey/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'ü§º‚Äç‚ôÇÔ∏è –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞':
        URL = 'https://ria.ru/fights/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üèÄ –±–∞—Å–∫–µ—Ç–±–æ–ª':
        URL = 'https://ria.ru/basketball/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üéæ —Ç–µ–Ω–Ω–∏—Å':
        URL = 'https://ria.ru/tennis/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-7])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == '‚õ∑ –ª—ã–∂–∏':
        URL = 'https://ria.ru/cross_country/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üöÄ –∫–æ—Å–º–æ—Å':
        URL = 'https://ria.ru/space/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üíñ –∑–¥–æ—Ä–æ–≤—å–µ':
        URL = 'https://ria.ru/sn_health/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-10])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üõ† —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏':
        URL = 'https://ria.ru/technology/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üß¨ –≥–µ–Ω–µ—Ç–∏–∫–∞':
        URL = 'https://ria.ru/keyword_genetika/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == '‚ìÇÔ∏è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞':
        URL = 'https://ria.ru/keyword_matematika/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üë¨ —Å–æ—Ü–∏–æ–ª–æ–≥–∏—è':
        URL = 'https://ria.ru/keyword_sociologija/'

        headers = {
        'User_Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 YaBrowser/21.2.4.172 Yowser/2.5 Safari/537.36'
        }

        response = requests.get(URL, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        texts = soup.findAll('a', 'list-item__title')

        for i in range(0, len(texts[:-15])):
            txt = str(i + 1) + '. ' + texts[i].text
            bot.send_message(message.chat.id, '<a href="{}"> {}</a>'.format(texts[i]['href'], txt), parse_mode='html')

    elif message.text.lower() == 'üì∞ –Ω–æ–≤–æ—Å—Ç–∏':
        bot.send_message(message.chat.id, '–ö–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å?', reply_markup=for_news())

    elif message.text.lower() == '‚òîÔ∏è –ø–æ–≥–æ–¥–∞':
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –ø—Ä–æ–ø–∏—à–∏ /weather', reply_markup=main())

    elif message.text.lower() == '—Å–ø–æ—Ä—Ç ‚ÜïÔ∏è':
        bot.send_message(message.chat.id, '–ö–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–ø–æ—Ä—Ç–∞ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å?', reply_markup=for_sport())
    
    elif message.text.lower() == '–Ω–∞—É–∫–∞ ‚ÜïÔ∏è':
        bot.send_message(message.chat.id, '–ö–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—É–∫–∏ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å?', reply_markup=for_science())

    elif message.text.lower() == '‚óÄÔ∏è –Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ', reply_markup=main())

    elif message.text.lower() == '‚óÄÔ∏è –æ–±—Ä–∞—Ç–Ω–æ –∫ –Ω–æ–≤–æ—Å—Ç—è–º':
        bot.send_message(message.chat.id, '–û–∫–µ–π', reply_markup=for_news())
    
    elif message.text.lower() == '–∫–∞–∫ –¥–µ–ª–∞?':
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=how_are_you())
    
    elif message.text.lower() == '–ø–æ–∫–∞':
        bot.send_message(message.chat.id, '–î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!', reply_markup=types.ReplyKeyboardRemove())
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAID_GBnVAUCbG2RR8lRszX7zCsbqs8cAAJSAANBtVYMAhDiZGl_D3IeBA')

    else:
        bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω—è—Ç–Ω–æ –¥–ª—è –º–µ–Ω—è :( –ù–∞–ø–∏—à–∏ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è —É–º–µ—é', reply_markup=main())


@bot.callback_query_handler(func=lambda call: call.data=='yes')
def calluser_age_yes(call):
    try:
        if call.data == 'yes':
            bot.send_message(call.message.chat.id, '–ó–∞–ø–æ–º–Ω—é :)')

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–•–æ—Ä–æ—à–æ', reply_markup=None)

    except Exception as e:
       print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data=='no')
def calluser_age_no(call):
    try:
        if call.data == 'no':
            bot.send_message(call.message.chat.id, '–ü—Ä–æ–ø–∏—à–∏ –µ—â–µ —Ä–∞–∑ /reg') #–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –æ—Ç–≤–µ—Ç

            
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–£–ø—Å...', reply_markup=None)
    

    except Exception as e:
       print(repr(e))


@bot.callback_query_handler(func=lambda call: call.data=='again')
def callback_inline(call):
    try:
        if call.data == 'again':
            bot.send_message(call.message.chat.id, str(random.randint(0,100)), reply_markup=main())

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ', reply_markup=None)

            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–£–¥–∞—á–∏")
    
    except Exception as e:
       print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data=='good')
def callback_good(call):
    try:
        if call.data == 'good':
            bot.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!', reply_markup=main())

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–æ :)', reply_markup=None)
    except Exception as e:
       print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data=='yes_delete')
def callback_yes(call):
    try:
        if call.data == 'yes_delete':
            bot.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!', reply_markup=types.ReplyKeyboardRemove())

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–•–æ—Ä–æ—à–æ', reply_markup=None)
    except Exception as e:
       print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data=='no_delete')
def callback_no(call):
    try:
        if call.data == 'no_delete':
            bot.send_message(call.message.chat.id, '–ù–µ —Ç—Ä–æ–≥–∞—é —è —Ç–≤–æ–∏ –∫–Ω–æ–ø–∫–∏!', reply_markup=main())

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–•–æ—Ä–æ—à–æ-—Ö–æ—Ä–æ—à–æ', reply_markup=None)
    except Exception as e:
       print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data=='bad')
def callback_bad(call):
    try:
        if call.data == 'bad':
            bot.send_message(call.message.chat.id, '–í—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ!', reply_markup=main())

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ', reply_markup=None)
    
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù–µ –≤–µ—à–∞–π –Ω–æ—Å")
    except Exception as e:
       print(repr(e))

bot.polling(none_stop=True)


while True:
    time.sleep()